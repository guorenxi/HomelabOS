---
- name: Make invoiceninja directory.
  file:
    path: "{{ volumes_root }}/invoiceninja"
    state: directory

- name: Make invoiceninja config/nginx/conf.d directory.
  file:
    path: "{{ volumes_root }}/invoiceninja/config/nginx/conf.d"
    state: directory

- name: Make invoiceninja config/php directory.
  file:
    path: "{{ volumes_root }}/invoiceninja/config/php"
    state: directory
<<<<<<< HEAD

- name: Make invoiceninja directories
  file:
    path: "{{ volumes_root }}/invoiceninja/{{item}}"
    state: directory
    owner: "{{homelab_ssh_user}}"
    group: "{{homelab_ssh_user}}"
  loop:
    - "public"
    - "logo"
    - "storage"

- name: install nginx config
  template:
    src: nginx.conf
    dest: "{{  volumes_root }}/invoiceninja/config/nginx/nginx.conf"
=======
    
- name: Make invoiceninja Public directory.
  file:
    path: "{{ volumes_root }}/invoiceninja/public"
    state: directory
    owner: {{homelab_ssh_user}}
    group: {{homelab_ssh_user}}

- name: Make invoiceninja Storage directory.
  file:
    path: "{{ volumes_root }}/invoiceninja/storage"
    state: directory
    owner: {{homelab_ssh_user}}
    group: {{homelab_ssh_user}}

- name: install nginx config
  template:
    src: nginx.conf
    dest: "{{  volumes_root }}/invoiceninja/config/nginx/nginx.conf"
>>>>>>> initial commit

- name: install php-cli config
  template:
    src: php-cli.j2
    dest: "{{ volumes_root }}/invoiceninja/config/php/php-cli.ini"

- name: install php config
  template:
    src: php.j2
    dest: "{{ volumes_root }}/invoiceninja/config/php/php.ini"

- name: Generate new encryption key.
  shell: >
    docker run --rm -i invoiceninja/invoiceninja php artisan key:generate --show | awk 'END{print}'
  register: application_key
  become: false

- name: Copy invoiceninja docker-compose.yml file into place.
  template:
    src: docker-compose.invoiceninja.yml.j2
    dest: "{{ volumes_root }}/invoiceninja/docker-compose.yml"
  vars:
    tor_domain: "{{ tor_http_domain_file.stdout | default('') }}"
    application_key: application_key

- name: Configure invoiceninja systemd service.
  template:
    src: service.j2
    dest: /etc/systemd/system/invoiceninja.service

- name: Start invoiceninja
  systemd:
    name: invoiceninja
    enabled: "yes"
    daemon-reload: "yes"
    state: started
